# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""cafe.info.workTime"""
type WorkTime {
  day: [Day!]!
  startTime: String
  endTime: String
}

enum Day {
  MON
  TUE
  WED
  THU
  FRI
  SAT
  SUN
}

"""cafe.info"""
type Info {
  address: String!
  workTime: WorkTime!
}

"""cafe.location"""
type Location {
  x: Float!
  y: Float!
}

"""cafe"""
type Cafe {
  """object id"""
  _id: String!
  name: String!
  info: Info!
  contact: String!
  location: Location!
  theme: [Theme!]!
  created_at: DateTime!
  updated_at: DateTime!
}

enum Theme {
  MOOD
  WORK
  TASTE
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""cafe_users"""
type CafeUser {
  """object id"""
  _id: String!
  cafeId: String!
  userId: String!
  theme: String!
  created_at: DateTime!
  updated_at: DateTime!
}

"""cafe.cafeUserList"""
type CafeUserList {
  userList: [CafeUser!]!
  count: Float!
}

"""cafe card"""
type CafeCard {
  """object id"""
  _id: String!
  name: String!
  info: Info!
  contact: String!
  location: Location!
  theme: [Theme!]!
  cafeUserList: CafeUserList!
  created_at: DateTime!
  updated_at: DateTime!
}

type Credential {
  token: String!
  me: Me!
}

type Me {
  _id: String!

  """이름"""
  name: String!

  """소개"""
  introductionDesc: String!
}

type Query {
  getAllCafe: [Cafe!]!
  getCafe(theme: Theme!): [CafeCard!]
  getCafeAround(locationX: Float!, locationY: Float!, theme: Theme): [CafeCard!]
  me: Me!
}

type Mutation {
  createCafe(args: CreateCafeArgs!): Cafe!
  loginKakao(code: String!, redirectURI: String!): Credential!
  signup(
    input: NewAccountInput!

    """구글 액세스 토큰"""
    accessToken: String!
  ): Credential!
  updateProfile(input: UpdateProfileInput!): Me!
}

"""New cafe create mutation args"""
input CreateCafeArgs {
  name: String
  address: String
  day: [Day!]
  startTime: String
  endTime: String
  theme: Theme
  contact: String
  locationX: Float
  locationY: Float
}

input NewAccountInput {
  """이름"""
  name: String!

  """소개"""
  introductionDesc: String!
}

input UpdateProfileInput {
  """수정할 이름"""
  name: String

  """수정할 소개"""
  introductionDesc: String
}
